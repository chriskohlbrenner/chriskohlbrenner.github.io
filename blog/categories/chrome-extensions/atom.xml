<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Chrome Extensions | CEK.io]]></title>
  <link href="http://cek.io/blog/categories/chrome-extensions/atom.xml" rel="self"/>
  <link href="http://cek.io/"/>
  <updated>2017-08-17T18:13:01-04:00</updated>
  <id>http://cek.io/</id>
  <author>
    <name><![CDATA[Chris Eaves-Kohlbrenner]]></name>
    <email><![CDATA[c.kohlbrenner@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scratching My Own Itch: A Chrome Extension Story]]></title>
    <link href="http://cek.io/blog/2015/03/24/chrome-extension/"/>
    <updated>2015-03-24T17:10:39-04:00</updated>
    <id>http://cek.io/blog/2015/03/24/chrome-extension</id>
    <content type="html"><![CDATA[<p>When we submit pull requests on BitBucket, my coworkers and I will generally draw attention when they are net-negative, removing more lines of code than they add. In some cases, it&rsquo;s pretty obvious&mdash;entire files being deleted, etc. Oftentimes, however, it requires doing a bit of mental math to tally the difference between lines added and lines removed. For that reason, it&rsquo;s gratifying to &ldquo;scratch my own itch&rdquo; by installing <a href="https://chrome.google.com/webstore/detail/net-lines-of-code/npjphkppofmfcohiffnkfjnehcaachgf">this extension</a> to do it for me.</p>

<p><img src="/images/chrome_extension.png"></p>

<!--more-->


<p>The &ldquo;problem&rdquo; already had a solution of sorts, in the form of a short jQuery script a coworker had pulled together:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (extension.js)</span> <a href='/downloads/code/chrome-extension/extension.js'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">addVals</span><span class="p">,</span> <span class="nx">linesAdded</span><span class="p">,</span> <span class="nx">linesRemoved</span><span class="p">,</span> <span class="nx">offset</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">addVals</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">className</span><span class="p">,</span> <span class="nx">symbolToReplace</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">results</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">results</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nx">className</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">val</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">val</span> <span class="o">=</span> <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">html</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="nx">symbolToReplace</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">results</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">val</span><span class="p">));</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">results</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">y</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">x</span> <span class="o">+</span> <span class="nx">y</span><span class="p">;</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">linesAdded</span> <span class="o">=</span> <span class="nx">addVals</span><span class="p">(</span><span class="s1">&#39;.lines-added&#39;</span><span class="p">,</span> <span class="s1">&#39;+&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">linesRemoved</span> <span class="o">=</span> <span class="nx">addVals</span><span class="p">(</span><span class="s1">&#39;.lines-removed&#39;</span><span class="p">,</span> <span class="s1">&#39;-&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">offset</span> <span class="o">=</span> <span class="nx">linesAdded</span> <span class="o">-</span> <span class="nx">linesRemoved</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>A simple solution that, when run in the browser console, would log the offset. I just wanted to make it even simpler by removing that one extra step. That meant setting up a Chrome extension, which was a far easier process than I thought it might be.</p>

<h3>A brief how-to</h3>




<ul>
  <li>Set up a new directory with a <code>manifest.json</code> file, with a <code>name</code>, <code>manifest_version</code> of 2, a <code>version</code>, </li>
  <li>To see it working, add an icon.png and list that file in <code>manifest.json</code> under <code>browser_action.default_icon</code>. By now, <code>manifest.json</code> should look something like this:
  <div>
  <pre><code class='javascript'>{
    &quot;name&quot;: &quot;Hello World!&quot;,
    &quot;manifest_version&quot;: 2,
    &quot;version&quot;: &quot;1.0&quot;,
    &quot;description&quot;: &quot;My first Chrome extension.&quot;,
    &quot;browser_action&quot;: {
      &quot;default_icon&quot;: &quot;icon.png&quot;
    }
  }</code></pre>
</div>

  </li>
  <li>Go to <a href="chrome://extensions">chrome://extensions</a>, tick 'developer mode', click 'load unpacked extension', and select your new folder--note your icon appear in the top right of your browser, next to your other extensions.</li>
  <li>At this point, you have a Chrome extension! Of course, now you need to decide what you want it to do, but getting it started is that trivial. In my case, I didn't even keep the default icon, since I just want a script to run on certain domains.</li>
  <li>Publishing the extension requires a <a href="https://chrome.google.com/webstore/developer/dashboard">Chrome developer account</a> (which requires a $5 payment), which you can set up here. From there, publishing the extension just requires compressing the folder to a zip file (right-click the folder, compress) and uploading.</li>
</ul>




<h3>Resources</h3>


<p><a href="https://developer.chrome.com/extensions/getstarted">Google&rsquo;s documentation is pretty clear and helpful</a><br>
<a href="http://lifehacker.com/5857721/how-to-build-a-chrome-extension">Lifehacker has a decent intro tutorial.</a><br></p>
]]></content>
  </entry>
  
</feed>
